----------------------------------------------------------------------
-- DEPENDENCIES
----------------------------------------------------------------------



----------------------------------------------------------------------
-- PROPERTIES
----------------------------------------------------------------------

-- local LMB = hash('LMB')
-- local RMB = hash('RMB')
local MOVE_UP = hash('move_up')
local MOVE_DOWN = hash('move_down')
local MOVE_LEFT = hash('move_left')
local MOVE_RIGHT = hash('move_right')
local SPRINT = hash('sprint')
local INVENTORY = hash('inventory')

----------------------------------------------------------------------
-- FUNCTIONS
----------------------------------------------------------------------

function move(self, dt, sprint_mod)
	if self.actions[MOVE_LEFT] then
		self.pos.x = self.pos.x - self.speed * (sprint_mod or 1) * dt
	elseif self.actions[MOVE_RIGHT] then
		self.pos.x = self.pos.x + self.speed * (sprint_mod or 1) * dt
	end
	if self.actions[MOVE_UP] then
		self.pos.y = self.pos.y + self.speed * (sprint_mod or 1) * dt
	elseif self.actions[MOVE_DOWN] then
		self.pos.y = self.pos.y - self.speed * (sprint_mod or 1) * dt
	end
end

function init(self)
	msg.post('.', 'acquire_input_focus')
	msg.post('camera', 'follow_player')
	self.speed = 150
	self.actions = {}
end


function update(self, dt)
	self.pos = go.get_position()
	
	if self.actions[SPRINT] then
		move(self, dt, 1.5)
	else
		move(self, dt)
	end

	go.set_position(self.pos)
	go.set_position(-vmath.vector3(self.pos.x, self.pos.y, 0) + vmath.vector3(512, 512, 0), "objects")
	-- outputs player-coordinates (in tiles, not pixels)
	msg.post('@render:', 'draw_text', { position = vmath.vector3(20,20,0), text = ('PLAYER x:%d, y:%d'):format(self.pos.x/16, self.pos.y/16) })
end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action)
	if action_id then
		if action.pressed then
			self.actions[action_id] = true
		elseif action.released then
			self.actions[action_id] = false
		end
	end
end